apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubernetes-pihole.fullname" . }}
  labels:
    {{- include "kubernetes-pihole.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kubernetes-pihole.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kubernetes-pihole.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "kubernetes-pihole.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.services.http.port }}
              protocol: TCP
            - name: https
              containerPort: {{ .Values.services.https.port }}
              protocol: TCP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: client
              containerPort: 67
              protocol: UDP
          env:
          {{- if .Values.webPort }}
          - name: 'WEB_PORT'
            value: "{{ .Values.webPort }}"
          {{- end }}
          {{- if .Values.virtualHost }}
          - name: VIRTUAL_HOST
            value: {{ .Values.virtualHost }}
          {{- end }}
          {{- if .Values.DNS1 }}
          - name: 'DNS1'
            value: {{ .Values.DNS1 }}
          {{- end }}
          {{- if .Values.DNS2 }}
          - name: 'DNS2'
            value: {{ .Values.DNS2 }}
          {{- end }}
          {{- range $key, $value := .Values.env }}
          - name: {{ $key | quote }}
            value: {{ $value | quote }}
          {{- end }}
          - secretRef:
              name: {{ include "kubernetes-pihole.fullname" . }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - mountPath: /etc/dnsmasq.d/02-custom.conf
            name: custom-dnsmasq
            subPath: 02-custom.conf
          - mountPath: /etc/addn-hosts
            name: custom-dnsmasq
            subPath: addn-hosts
          {{- if .Values.adlists }}
          - mountPath: /etc/pihole/adlists.list
            name: adlists
            subPath: adlists.list
          {{- end }}
          {{- if .Values.blacklist }}
          - mountPath: /etc/pihole/blacklist.txt
            name: blacklist
            subPath: blacklist.txt
          {{- end }}
          {{- if .Values.whitelist }}
          - mountPath: /etc/pihole/whitelist.txt
            name: whitelist
            subPath: whitelist.txt
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ include "kubernetes-pihole.fullname" . }}-custom-dnsmasq
        name: custom-dnsmasq
      {{- if .Values.adlists }}
      - configMap:
          defaultMode: 420
          name: {{ include "kubernetes-pihole.fullname" . }}-adlists
        name: adlists
      {{- end }}
      {{- if .Values.blacklist }}
      - configMap:
          defaultMode: 420
          name: {{ include "kubernetes-pihole.fullname" . }}-blacklist
        name: blacklist
      {{- end }}
      {{- if .Values.whitelist }}
      - configMap:
          defaultMode: 420
          name: {{ include "kubernetes-pihole.fullname" . }}-whitelist
        name: whitelist
      {{- end }}

